#!/usr/bin/env node
var fs=require("fs")
var toy=require("./toy.js")
var vm=require("vm")
var util=require("util")
var readline = require('readline')
var argv = process.argv
console.log(argv)

// read file and return array
var file_read = function(file_name){
    var content_in_file=fs.readFileSync(file_name,"utf8")   
    return content_in_file.split('\n')
}

// write string to file
var file_write = function(file_name, write_line){
    fs.writeFile(file_name, write_line, function(err) {
        if(err) {
            console.log(err);
        } else {
            //console.log("The file was saved!");
        }
    }); 
}
// REPL
if (argv.length==2){
	
	console.log("Interactive mode");
	console.log("Press Ctrl + C to quit\n");

	var input_str=""

	var rl = readline.createInterface({
	  input: process.stdin,
	  output: process.stdout
	})

	rl.setPrompt('toy> ')
	rl.prompt()

	var env = toy.set_up_environment()
	rl.on('line', function(line) {
		var tokenized_list = toy.Tokenize_String(line)
		var parsed_obj = toy.ParseString(tokenized_list)
		var return_value = toy.eval_sequence(parsed_obj, env)
		
		// toy.display( return_value )
		rl.setPrompt('toy> ')
		rl.prompt()
	})

	rl.on('close', function() {
	  console.log('Quit walley')
	  process.exit(0)
	});
	
}
// run file
else if (argv.length==3){
	var file_name = argv[2]
	if (typeof(file_name)=="undefined"){
		console.log("No input file..")
		process.exit(0)
	}
	// get content of file
	var content_in_file=fs.readFileSync(file_name,"utf8")
	// eval
	var env = toy.set_up_environment()
	var tokenized_list = toy.Tokenize_String(content_in_file)
	var parsed_obj = toy.ParseString(tokenized_list)
	var return_value = toy.eval_sequence(parsed_obj, env)
}

// COMPRESS
else if (argv.length == 4 && argv[2] == "compress"){
	var file_name = argv[3]
	var content_in_file = fs.readFileSync(file_name,"utf8")
	console.log(content_in_file)
	var parsedObj = toy.parseString(content_in_file)
	toy.printArray(parsedObj)
	console.log("\n\n\n\n            ========\n\n\n\n")
	toy.display_(parsedObj)
	console.log("\n\n Done...")
}



